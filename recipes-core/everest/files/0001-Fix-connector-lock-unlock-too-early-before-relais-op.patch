From cb048b159e0bd140cf2d47ead15caf9a0d16e7e9 Mon Sep 17 00:00:00 2001
From: Cornelius Claussen <cc@pionix.de>
Date: Thu, 1 Feb 2024 08:44:18 +0100
Subject: [PATCH] Fix connector lock unlock too early before relais open

Signed-off-by: Cornelius Claussen <cc@pionix.de>
---
 modules/EvseManager/IECStateMachine.cpp | 30 +++++++++++++++++++------
 modules/EvseManager/IECStateMachine.hpp |  5 ++++-
 2 files changed, 27 insertions(+), 8 deletions(-)

diff --git a/modules/EvseManager/IECStateMachine.cpp b/modules/EvseManager/IECStateMachine.cpp
index 494dfd7..24010f7 100644
--- a/modules/EvseManager/IECStateMachine.cpp
+++ b/modules/EvseManager/IECStateMachine.cpp
@@ -95,7 +95,17 @@ void IECStateMachine::process_bsp_event(const types::board_support_common::BspEv
                               feed_state_machine();
                           },
                           // If it is another CP event, pass through
-                          [this](CPEvent& event) { signal_event(event); }},
+                          [this](CPEvent& event) {
+                              // track relais state as confirmed by BSP
+                              if (event == CPEvent::PowerOn) {
+                                  relais_on = true;
+                              } else if (event == CPEvent::PowerOff) {
+                                  relais_on = false;
+                              }
+                              check_connector_lock();
+
+                              signal_event(event);
+                          }},
                event);
 }
 
@@ -260,6 +270,8 @@ std::queue<CPEvent> IECStateMachine::state_machine() {
         break;
     }
 
+    check_connector_lock();
+
     last_cp_state = cp_state;
     last_pwm_running = pwm_running;
     last_power_on_allowed = power_on_allowed;
@@ -386,16 +398,20 @@ void IECStateMachine::set_overcurrent_limit(double amps) {
 }
 
 void IECStateMachine::connector_lock() {
-    if (not locked) {
-        signal_lock();
-        locked = true;
-    }
+    should_be_locked = true;
 }
 
 void IECStateMachine::connector_unlock() {
-    if (locked) {
+    should_be_locked = false;
+}
+
+void IECStateMachine::check_connector_lock() {
+    if (should_be_locked and not is_locked) {
+        signal_lock();
+        is_locked = true;
+    } else if (not should_be_locked and is_locked and not relais_on) {
         signal_unlock();
-        locked = false;
+        is_locked = false;
     }
 }
 
diff --git a/modules/EvseManager/IECStateMachine.hpp b/modules/EvseManager/IECStateMachine.hpp
index 83e8a8c..f50a771 100644
--- a/modules/EvseManager/IECStateMachine.hpp
+++ b/modules/EvseManager/IECStateMachine.hpp
@@ -87,6 +87,7 @@ public:
 
     void connector_lock();
     void connector_unlock();
+    void check_connector_lock();
 
     // Signal for internal events type
     sigslot::signal<CPEvent> signal_event;
@@ -118,9 +119,11 @@ private:
     void call_allow_power_on_bsp(bool value);
 
     std::atomic_bool three_phases{true};
-    std::atomic_bool locked{false};
+    std::atomic_bool is_locked{false};
+    std::atomic_bool should_be_locked{false};
 
     std::atomic_bool enabled{false};
+    std::atomic_bool relais_on{false};
 };
 
 } // namespace module
-- 
2.34.1

